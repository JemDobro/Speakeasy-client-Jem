{"version":3,"sources":["config.js","actions/utils.js","local-storage.js","actions/auth.js","components/header-bar.js","components/input.js","validators.js","components/login-form.js","components/landing-page.js","actions/protected-data.js","components/dashboard.js","components/requires-login.js","components/registration-form.js","actions/users.js","components/registration-page.js","components/app.js","reducers/auth.js","reducers/protected-data.js","store.js","index.js"],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","refreshAuthToken","getState","auth","Authorization","_ref2","HeaderBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","logOutButton","_this","loggedIn","react_default","a","createElement","onClick","logOut","className","React","Component","connect","state","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","assign","id","ref","required","undefined","nonEmpty","trim","isTrimmed","LoginForm","values","aria-live","onSubmit","handleSubmit","Field","component","validate","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","length","field","es","to","login_form","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","fetchProtectedData","data","Dashboard","console","log","protectedData","firstName","question","requiresLogin","RequiresLogin","authenticating","passThroughProps","objectWithoutProperties","displayName","loading","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","lastName","content-type","reason","location","defineProperty","registerUser","_this2","keys","registration_form","App","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","clearInterval","header_bar","exact","path","LandingPage","RegistrationPage","withRouter","hasAuthToken","initialState","store","createStore","combineReducers","formReducer","action","composeWithDevTools","applyMiddleware","thunk","getItem","token","ReactDOM","render","react_redux_es","app","document","getElementById"],"mappings":"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","file":"static/js/main.4b1cf334.chunk.js","sourcesContent":["export const API_BASE_URL =\r\n    process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\r\n","// Boilerplate code for handling errors from the API.  If the error response\r\n// contains JSON then we return a rejected promise containing the decoded\r\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\r\n// containing the status text.  If there is no error then we continue with\r\n// the promise chain.\r\nexport const normalizeResponseErrors = res => {\r\n    if (!res.ok) {\r\n        if (\r\n            res.headers.has('content-type') &&\r\n            res.headers.get('content-type').startsWith('application/json')\r\n        ) {\r\n            // It's a nice JSON error returned by us, so decode it\r\n            return res.json().then(err => Promise.reject(err));\r\n        }\r\n        // It's a less informative error returned by express\r\n        return Promise.reject({\r\n            code: res.status,\r\n            message: res.statusText\r\n        });\r\n    }\r\n    return res;\r\n};\r\n","export const loadAuthToken = () => {\r\n    return localStorage.getItem('authToken');\r\n};\r\n\r\nexport const saveAuthToken = authToken => {\r\n    try {\r\n        localStorage.setItem('authToken', authToken);\r\n    } catch (e) {}\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n    try {\r\n        localStorage.removeItem('authToken');\r\n    } catch (e) {}\r\n};\r\n","import jwtDecode from 'jwt-decode';\r\nimport {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\r\n\r\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\r\nexport const setAuthToken = authToken => ({\r\n    type: SET_AUTH_TOKEN,\r\n    authToken\r\n});\r\n\r\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\r\nexport const clearAuth = () => ({\r\n    type: CLEAR_AUTH\r\n});\r\n\r\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\r\nexport const authRequest = () => ({\r\n    type: AUTH_REQUEST\r\n});\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const authSuccess = currentUser => ({\r\n    type: AUTH_SUCCESS,\r\n    currentUser\r\n});\r\n\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const authError = error => ({\r\n    type: AUTH_ERROR,\r\n    error\r\n});\r\n\r\n// Stores the auth token in state and localStorage, and decodes and stores\r\n// the user data stored in the token\r\nconst storeAuthInfo = (authToken, dispatch) => {\r\n    const decodedToken = jwtDecode(authToken);\r\n    dispatch(setAuthToken(authToken));\r\n    dispatch(authSuccess(decodedToken.user));\r\n    saveAuthToken(authToken);\r\n};\r\n\r\nexport const login = (username, password) => dispatch => {\r\n    dispatch(authRequest());\r\n    return (\r\n        fetch(`${API_BASE_URL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n            // Reject any requests which don't return a 200 status, creating\r\n            // errors which follow a consistent format\r\n            .then(res => normalizeResponseErrors(res))\r\n            .then(res => res.json())\r\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n            .catch(err => {\r\n                const {code} = err;\r\n                const message =\r\n                    code === 401\r\n                        ? 'Incorrect username or password'\r\n                        : 'Unable to login, please try again';\r\n                dispatch(authError(err));\r\n                // Could not authenticate, so return a SubmissionError for Redux\r\n                // Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        _error: message\r\n                    })\r\n                );\r\n            })\r\n    );\r\n};\r\n\r\nexport const refreshAuthToken = () => (dispatch, getState) => {\r\n    dispatch(authRequest());\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n            // Provide our existing token as credentials to get a new one\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\r\n        .catch(err => {\r\n            // We couldn't get a refresh token because our current credentials\r\n            // are invalid or expired, or something else went wrong, so clear\r\n            // them and sign us out\r\n            dispatch(authError(err));\r\n            dispatch(clearAuth());\r\n            clearAuthToken(authToken);\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {clearAuth} from '../actions/auth';\r\nimport {clearAuthToken} from '../local-storage';\r\n\r\nexport class HeaderBar extends React.Component {\r\n    logOut() {\r\n        this.props.dispatch(clearAuth());\r\n        clearAuthToken();\r\n    }\r\n\r\n    render() {\r\n        // Only render the log out button if we are logged in\r\n        let logOutButton;\r\n        if (this.props.loggedIn) {\r\n            logOutButton = (\r\n                <button onClick={() => this.logOut()}>Log out</button>\r\n            );\r\n\r\n        }\r\n        return (\r\n            <div className=\"header-bar\">\r\n                <h1>Speakeasy</h1>\r\n                {logOutButton}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {    \r\n    return {\r\n        loggedIn: state.auth.currentUser !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeaderBar);\r\n","import React from 'react';\r\n\r\nexport default class Input extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.meta.active && this.props.meta.active) {\r\n            this.input.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.meta.touched && this.props.meta.error) {\r\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\r\n        }\r\n\r\n        let warning;\r\n        if (this.props.meta.touched && this.props.meta.warning) {\r\n            warning = (\r\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-input\">\r\n                <label htmlFor={this.props.input.name}>\r\n                    {this.props.label}\r\n                    {error}\r\n                    {warning}\r\n                </label>\r\n                <input\r\n                    {...this.props.input}\r\n                    id={this.props.input.name}\r\n                    type={this.props.type}\r\n                    ref={input => (this.input = input)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const required = value => (value ? undefined : 'Required');\r\nexport const nonEmpty = value =>\r\n    value.trim() !== '' ? undefined : 'Cannot be empty';\r\nexport const isTrimmed = value =>\r\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\r\nexport const length = length => value => {\r\n    if (length.min && value.length < length.min) {\r\n        return `Must be at least ${length.min} characters long`;\r\n    }\r\n    if (length.max && value.length > length.max) {\r\n        return `Must be at most ${length.max} characters long`;\r\n    }\r\n};\r\nexport const matches = field => (value, allValues) =>\r\n    field in allValues && value.trim() === allValues[field].trim()\r\n        ? undefined\r\n        : 'Does not match';\r\n","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport Input from './input';\r\nimport {login} from '../actions/auth';\r\nimport {required, nonEmpty} from '../validators';\r\n\r\nexport class LoginForm extends React.Component {\r\n    onSubmit(values) {\r\n        return this.props.dispatch(login(values.username, values.password));\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.props.error) {\r\n            error = (\r\n                <div className=\"form-error\" aria-live=\"polite\">\r\n                    {this.props.error}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <form\r\n                className=\"login-form\"\r\n                onSubmit={this.props.handleSubmit(values =>\r\n                    this.onSubmit(values)\r\n                )}>\r\n                {error}\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    validate={[required, nonEmpty]}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    validate={[required, nonEmpty]}\r\n                />\r\n                <button disabled={this.props.pristine || this.props.submitting}>\r\n                    Log in\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'login',\r\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\r\n})(LoginForm);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nimport LoginForm from './login-form';\r\n\r\nexport function LandingPage(props) {\r\n    // If we are logged in redirect straight to the user's dashboard\r\n    if (props.loggedIn) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Deployed  Welcome to Speakeasy...do you know the secret knock?</h2>\r\n            <LoginForm />\r\n            <p>Do you find yourself nodding along with your smart tech friends, coworkers, or worse, your boss, as if you understand the latest tech jargon? All the while, secretly hoping that you won't have to feign choking on your drink if someone asks you a question? Are you yearning to get into the club but can't quite speak the language? Step into Speakeasy, learn the language, up your stats and your status as you keep up to date with all the latest secret knocks that open doors... </p>\r\n            <Link to=\"/register\">Become one of the club</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(LandingPage);\r\n","import {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\r\nexport const fetchProtectedDataSuccess = data => ({\r\n    type: FETCH_PROTECTED_DATA_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\r\nexport const fetchProtectedDataError = error => ({\r\n    type: FETCH_PROTECTED_DATA_ERROR,\r\n    error\r\n});\r\n\r\nexport const fetchProtectedData = () => (dispatch, getState) => {\r\n    const authToken = getState().auth.authToken;\r\n    return fetch(`${API_BASE_URL}/questions`, {\r\n        method: 'GET',\r\n        headers: {\r\n            // Provide our auth token as credentials\r\n            Authorization: `Bearer ${authToken}`\r\n        }\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .then((res) => dispatch(fetchProtectedDataSuccess(res)))\r\n        .catch(err => {\r\n            dispatch(fetchProtectedDataError(err));\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport requiresLogin from './requires-login';\r\nimport {fetchProtectedData} from '../actions/protected-data';\r\n// import AnswerInput from './answer-input';\r\n// import Feedback from './feedback';\r\n// import Score from './score';\r\n// import { nextQuestion } from \"../actions/scores\";\r\n\r\nexport class Dashboard extends React.Component {\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.dispatch(fetchProtectedData());\r\n    }\r\n\r\n    render() {\r\n        console.log(`In render`, this.props)\r\n        if (this.props.protectedData.length < 1) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <h2>{`Hello ${this.props.firstName}, welcome to the club...`}</h2>\r\n                <div className=\"question\">\r\n                    <p>{`Question: ${this.props.protectedData[1].question /*[this.props.currQuestion]*/}`}</p>\r\n                </div>\r\n                {/* <div><AnswerInput />\r\n                </div>\r\n                <div><Feedback />\r\n                </div>\r\n                <div><Score />\r\n                </div> */}\r\n                <button type=\"button\" className=\"nextButton\" /*onClick={() => this.props.dispatch(nextQuestion)}*/ /*disabled={this.props.pristine || this.props.submitting}*/>Next</button>\r\n                {/* <div className=\"dashboard-name\">Name: {this.props.username}</div>\r\n                <div className=\"dashboard-protected-data\">\r\n                    { Protected data: {this.props.protectedData} }\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const {currentUser} = state.auth;\r\n    return {\r\n        username: state.auth.currentUser.username,\r\n        firstName: `${currentUser.firstName}`,\r\n        protectedData: state.protectedData.data,\r\n        // currQuestion: state.score.currQuestion,\r\n        // question: `${currentUser.questions[currentUser.head].question}`\r\n    };\r\n};\r\n\r\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default () => Component => {\r\n    function RequiresLogin(props) {\r\n        const {authenticating, loggedIn, error, ...passThroughProps} = props;\r\n        if (authenticating) {\r\n            return <div>Logging in...</div>;\r\n        } else if (!loggedIn || error) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return <Component {...passThroughProps} />;\r\n    }\r\n\r\n    const displayName = Component.displayName || Component.name || 'Component';\r\n    RequiresLogin.displayName = `RequiresLogin(${displayName})`;\r\n\r\n    const mapStateToProps = (state, props) => ({\r\n        authenticating: state.auth.loading,\r\n        loggedIn: state.auth.currentUser !== null,\r\n        error: state.auth.error\r\n    });\r\n\r\n    return connect(mapStateToProps)(RequiresLogin);\r\n};\r\n","import React from 'react';\r\nimport {Field, reduxForm, focus} from 'redux-form';\r\nimport {registerUser} from '../actions/users';\r\nimport {login} from '../actions/auth';\r\nimport Input from './input';\r\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\r\nconst passwordLength = length({min: 10, max: 72});\r\nconst matchesPassword = matches('password');\r\n\r\nexport class RegistrationForm extends React.Component {\r\n    onSubmit(values) {\r\n        const {username, password, firstName, lastName} = values;\r\n        const user = {username, password, firstName, lastName};\r\n        return this.props\r\n            .dispatch(registerUser(user))\r\n            .then(() => this.props.dispatch(login(username, password)));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"login-form\"\r\n                onSubmit={this.props.handleSubmit(values =>\r\n                    this.onSubmit(values)\r\n                )}>\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <Field \r\n                    component={Input}\r\n                    type=\"text\" \r\n                    name=\"firstName\"\r\n                    validate={[required, nonEmpty]}\r\n                />\r\n                <label htmlFor=\"lastName\">Last name</label>\r\n                <Field component={Input} type=\"text\" name=\"lastName\" />\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    validate={[required, nonEmpty, isTrimmed]}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    validate={[required, passwordLength, isTrimmed]}\r\n                />\r\n                <label htmlFor=\"passwordConfirm\">Confirm password</label>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"password\"\r\n                    name=\"passwordConfirm\"\r\n                    validate={[required, nonEmpty, matchesPassword]}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={this.props.pristine || this.props.submitting}>\r\n                    Register\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'registration',\r\n    onSubmitFail: (errors, dispatch) =>\r\n        dispatch(focus('registration', Object.keys(errors)[0]))\r\n})(RegistrationForm);\r\n","import {SubmissionError} from 'redux-form';\r\n\r\nimport {API_BASE_URL} from '../config';\r\nimport {normalizeResponseErrors} from './utils';\r\n\r\nexport const registerUser = user => dispatch => {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => normalizeResponseErrors(res))\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            const {reason, message, location} = err;\r\n            if (reason === 'ValidationError') {\r\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n                return Promise.reject(\r\n                    new SubmissionError({\r\n                        [location]: message\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nimport RegistrationForm from './registration-form';\r\n\r\nexport function RegistrationPage(props) {\r\n    // If we are logged in (which happens automatically when registration\r\n    // is successful) redirect to the user's dashboard\r\n    if (props.loggedIn) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>You're almost in! Register here to become one of the club</h2>\r\n            <RegistrationForm />\r\n            <Link to=\"/\">Login</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegistrationPage);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route, withRouter} from 'react-router-dom';\r\n\r\nimport HeaderBar from './header-bar';\r\nimport LandingPage from './landing-page';\r\nimport Dashboard from './dashboard';\r\nimport RegistrationPage from './registration-page';\r\nimport {refreshAuthToken} from '../actions/auth';\r\n\r\nexport class App extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.loggedIn && this.props.loggedIn) {\r\n            // When we are logged in, refresh the auth token periodically\r\n            this.startPeriodicRefresh();\r\n        } else if (prevProps.loggedIn && !this.props.loggedIn) {\r\n            // Stop refreshing when we log out\r\n            this.stopPeriodicRefresh();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopPeriodicRefresh();\r\n    }\r\n\r\n    startPeriodicRefresh() {\r\n        this.refreshInterval = setInterval(\r\n            () => this.props.dispatch(refreshAuthToken()),\r\n            60 * 60 * 1000 // One hour\r\n        );\r\n    }\r\n\r\n    stopPeriodicRefresh() {\r\n        if (!this.refreshInterval) {\r\n            return;\r\n        }\r\n\r\n        clearInterval(this.refreshInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <HeaderBar />\r\n                <Route exact path=\"/\" component={LandingPage} />\r\n                <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                <Route exact path=\"/register\" component={RegistrationPage} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    hasAuthToken: state.auth.authToken !== null,\r\n    loggedIn: state.auth.currentUser !== null\r\n});\r\n\r\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\r\nexport default withRouter(connect(mapStateToProps)(App));\r\n","import {\r\n    SET_AUTH_TOKEN,\r\n    CLEAR_AUTH,\r\n    AUTH_REQUEST,\r\n    AUTH_SUCCESS,\r\n    AUTH_ERROR\r\n} from '../actions/auth';\r\n\r\nconst initialState = {\r\n    authToken: null, // authToken !== null does not mean it has been validated\r\n    currentUser: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    if (action.type === SET_AUTH_TOKEN) {\r\n        return Object.assign({}, state, {\r\n            authToken: action.authToken\r\n        });\r\n    } else if (action.type === CLEAR_AUTH) {\r\n        return Object.assign({}, state, {\r\n            authToken: null,\r\n            currentUser: null\r\n        });\r\n    } else if (action.type === AUTH_REQUEST) {\r\n        return Object.assign({}, state, {\r\n            loading: true,\r\n            error: null\r\n        });\r\n    } else if (action.type === AUTH_SUCCESS) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            currentUser: action.currentUser\r\n        });\r\n    } else if (action.type === AUTH_ERROR) {\r\n        return Object.assign({}, state, {\r\n            loading: false,\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}\r\n","import {\r\n    FETCH_PROTECTED_DATA_SUCCESS,\r\n    FETCH_PROTECTED_DATA_ERROR\r\n} from '../actions/protected-data';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    console.log(action);\r\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\r\n        console.log(action.data);\r\n        return Object.assign({}, state, {\r\n            data: action.data,\r\n            error: null\r\n        });\r\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\r\n        return Object.assign({}, state, {\r\n            error: action.error\r\n        });\r\n    }\r\n    return state;\r\n}\r\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport {loadAuthToken} from './local-storage';\r\nimport authReducer from './reducers/auth';\r\nimport protectedDataReducer from './reducers/protected-data';\r\nimport {setAuthToken, refreshAuthToken} from './actions/auth';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        auth: authReducer,\r\n        protectedData: protectedDataReducer\r\n    }), composeWithDevTools(\r\n    applyMiddleware(thunk))\r\n);\r\n\r\n// Hydrate the authToken from localStorage if it exist\r\nconst authToken = loadAuthToken();\r\nif (authToken) {\r\n    console.log('there is an auth token');\r\n    const token = authToken;\r\n    store.dispatch(setAuthToken(token));\r\n    store.dispatch(refreshAuthToken());\r\n}\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport App from './components/app';\r\nimport store from './store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}